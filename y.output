Terminals unused in grammar

   NEWLINE


Grammar

    0 $accept: START $end

    1 START: ORDERED
    2      | UNORDERED

    3 ORDERED: START_OL_TAG ATT '>' LIST_TAG OL_END_TAG

    4 UNORDERED: START_UL_TAG ATT '>' LIST_TAG UL_END_TAG

    5 LIST_TAG: LIST_TAG START_LI_TAG ATT '>' BODY LI_END_TAG
    6         | /* empty */

    7 BODY: BODY TEXT
    8     | /* empty */
    9     | ORDERED
   10     | UNORDERED

   11 ATT: ATT ATTRIBUTE ATTRIBUTE_VAL
   12    | /* empty */


Terminals, with rules where they appear

$end (0) 0
'>' (62) 3 4 5
error (256)
START_OL_TAG (258) 3
START_UL_TAG (259) 4
ATTRIBUTE (260) 11
ATTRIBUTE_VAL (261) 11
TEXT (262) 7
OL_END_TAG (263) 3
UL_END_TAG (264) 4
START_LI_TAG (265) 5
LI_END_TAG (266) 5
NEWLINE (267)


Nonterminals, with rules where they appear

$accept (14)
    on left: 0
START (15)
    on left: 1 2, on right: 0
ORDERED (16)
    on left: 3, on right: 1 9
UNORDERED (17)
    on left: 4, on right: 2 10
LIST_TAG (18)
    on left: 5 6, on right: 3 4 5
BODY (19)
    on left: 7 8 9 10, on right: 5 7
ATT (20)
    on left: 11 12, on right: 3 4 5 11


state 0

    0 $accept: . START $end

    START_OL_TAG  shift, and go to state 1
    START_UL_TAG  shift, and go to state 2

    START      go to state 3
    ORDERED    go to state 4
    UNORDERED  go to state 5


state 1

    3 ORDERED: START_OL_TAG . ATT '>' LIST_TAG OL_END_TAG

    $default  reduce using rule 12 (ATT)

    ATT  go to state 6


state 2

    4 UNORDERED: START_UL_TAG . ATT '>' LIST_TAG UL_END_TAG

    $default  reduce using rule 12 (ATT)

    ATT  go to state 7


state 3

    0 $accept: START . $end

    $end  shift, and go to state 8


state 4

    1 START: ORDERED .

    $default  reduce using rule 1 (START)


state 5

    2 START: UNORDERED .

    $default  reduce using rule 2 (START)


state 6

    3 ORDERED: START_OL_TAG ATT . '>' LIST_TAG OL_END_TAG
   11 ATT: ATT . ATTRIBUTE ATTRIBUTE_VAL

    ATTRIBUTE  shift, and go to state 9
    '>'        shift, and go to state 10


state 7

    4 UNORDERED: START_UL_TAG ATT . '>' LIST_TAG UL_END_TAG
   11 ATT: ATT . ATTRIBUTE ATTRIBUTE_VAL

    ATTRIBUTE  shift, and go to state 9
    '>'        shift, and go to state 11


state 8

    0 $accept: START $end .

    $default  accept


state 9

   11 ATT: ATT ATTRIBUTE . ATTRIBUTE_VAL

    ATTRIBUTE_VAL  shift, and go to state 12


state 10

    3 ORDERED: START_OL_TAG ATT '>' . LIST_TAG OL_END_TAG

    $default  reduce using rule 6 (LIST_TAG)

    LIST_TAG  go to state 13


state 11

    4 UNORDERED: START_UL_TAG ATT '>' . LIST_TAG UL_END_TAG

    $default  reduce using rule 6 (LIST_TAG)

    LIST_TAG  go to state 14


state 12

   11 ATT: ATT ATTRIBUTE ATTRIBUTE_VAL .

    $default  reduce using rule 11 (ATT)


state 13

    3 ORDERED: START_OL_TAG ATT '>' LIST_TAG . OL_END_TAG
    5 LIST_TAG: LIST_TAG . START_LI_TAG ATT '>' BODY LI_END_TAG

    OL_END_TAG    shift, and go to state 15
    START_LI_TAG  shift, and go to state 16


state 14

    4 UNORDERED: START_UL_TAG ATT '>' LIST_TAG . UL_END_TAG
    5 LIST_TAG: LIST_TAG . START_LI_TAG ATT '>' BODY LI_END_TAG

    UL_END_TAG    shift, and go to state 17
    START_LI_TAG  shift, and go to state 16


state 15

    3 ORDERED: START_OL_TAG ATT '>' LIST_TAG OL_END_TAG .

    $default  reduce using rule 3 (ORDERED)


state 16

    5 LIST_TAG: LIST_TAG START_LI_TAG . ATT '>' BODY LI_END_TAG

    $default  reduce using rule 12 (ATT)

    ATT  go to state 18


state 17

    4 UNORDERED: START_UL_TAG ATT '>' LIST_TAG UL_END_TAG .

    $default  reduce using rule 4 (UNORDERED)


state 18

    5 LIST_TAG: LIST_TAG START_LI_TAG ATT . '>' BODY LI_END_TAG
   11 ATT: ATT . ATTRIBUTE ATTRIBUTE_VAL

    ATTRIBUTE  shift, and go to state 9
    '>'        shift, and go to state 19


state 19

    5 LIST_TAG: LIST_TAG START_LI_TAG ATT '>' . BODY LI_END_TAG

    START_OL_TAG  shift, and go to state 1
    START_UL_TAG  shift, and go to state 2

    $default  reduce using rule 8 (BODY)

    ORDERED    go to state 20
    UNORDERED  go to state 21
    BODY       go to state 22


state 20

    9 BODY: ORDERED .

    $default  reduce using rule 9 (BODY)


state 21

   10 BODY: UNORDERED .

    $default  reduce using rule 10 (BODY)


state 22

    5 LIST_TAG: LIST_TAG START_LI_TAG ATT '>' BODY . LI_END_TAG
    7 BODY: BODY . TEXT

    TEXT        shift, and go to state 23
    LI_END_TAG  shift, and go to state 24


state 23

    7 BODY: BODY TEXT .

    $default  reduce using rule 7 (BODY)


state 24

    5 LIST_TAG: LIST_TAG START_LI_TAG ATT '>' BODY LI_END_TAG .

    $default  reduce using rule 5 (LIST_TAG)
